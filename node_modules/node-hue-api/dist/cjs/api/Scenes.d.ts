import { ApiDefinition } from './http/ApiDefinition';
import { model } from '@peter-murray/hue-bridge-model';
import { KeyValueType } from '../commonTypes';
import { Api } from './Api';
type LightScene = model.LightScene;
type GroupScene = model.GroupScene;
type SceneState = model.SceneLightState;
type Light = model.Light;
type SceneType = LightScene | GroupScene;
type SceneId = string | LightScene | GroupScene;
type LightId = number | Light;
export declare class Scenes extends ApiDefinition {
    constructor(hueApi: Api);
    getAll(): Promise<SceneType[]>;
    getScene(id: SceneId): Promise<SceneType>;
    getSceneByName(name: string): Promise<SceneType[]>;
    createScene(scene: SceneType): Promise<SceneType>;
    updateScene(scene: SceneType): Promise<KeyValueType>;
    /**
     * Updates the light state for a specific light in the scene
     */
    updateLightState(id: SceneId, lightId: LightId, sceneLightState: SceneState): Promise<KeyValueType>;
    deleteScene(id: SceneId): Promise<boolean>;
    activateScene(id: SceneId): Promise<boolean>;
}
export {};
